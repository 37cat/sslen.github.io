<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>码农的自留地</title>
  
  <subtitle>持续性混吃等死，间歇性踌躇满志</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://louzx.me/"/>
  <updated>2018-05-07T03:39:14.984Z</updated>
  <id>http://louzx.me/</id>
  
  <author>
    <name>Lou Zixuan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何成为数据科学家live 记录</title>
    <link href="http://louzx.me/2018/05/07/%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AE%B6live-%E8%AE%B0%E5%BD%95/"/>
    <id>http://louzx.me/2018/05/07/如何成为数据科学家live-记录/</id>
    <published>2018-05-07T01:23:24.000Z</published>
    <updated>2018-05-07T03:39:14.984Z</updated>
    
    <content type="html"><![CDATA[<p>在这个知乎live里听到了一个之前听到过的名词“计算广告”，在我离职前的一次公司分享会上，南京地区大boss张总就对这个概念侃侃而谈，还推荐了这本同名书籍。</p><p>而我们组之后做的用户行为数据记录应该也是为了流量变现做准备，我最后的印象是已经接入了google的数据统计接口，就是不知道最后做的怎么样了。</p><a id="more"></a><hr><h4 id="大数据和人工智能的关系"><a href="#大数据和人工智能的关系" class="headerlink" title="大数据和人工智能的关系"></a>大数据和人工智能的关系</h4><p><img src="/2018/05/07/如何成为数据科学家live-记录/1.jpg" alt="大数据与人工智能"></p><ul><li>数据是基础</li><li>机器学习是方法</li><li>产品是目的</li></ul><h4 id="大数据行业视野"><a href="#大数据行业视野" class="headerlink" title="大数据行业视野"></a>大数据行业视野</h4><p><img src="/2018/05/07/如何成为数据科学家live-记录/2.jpg" alt="大数据行业视野"></p><p>重点：产品，链接现实与愿景</p><h4 id="大数据的本质"><a href="#大数据的本质" class="headerlink" title="大数据的本质"></a>大数据的本质</h4><p><img src="/2018/05/07/如何成为数据科学家live-记录/3.jpg" alt="大数据的本质"></p><ul><li>行为数据 与之对应的是交易数据<ul><li>交易数据，为了维持业务开展所必须要记录的数据；对通信运营商来说，通话日志、充值日志等</li><li>行为数据，通话内容、地理位置、上网内容等</li></ul></li><li>全量加工 全部数据都需要使用，而不是通过部分采样就能够完成的任务</li><li>自动化应用 关键，相对于洞察应用（报表），机器决定而不是人决定，例如计算广告、个人征信系统</li></ul><h4 id="大数据的产品链条和问题"><a href="#大数据的产品链条和问题" class="headerlink" title="大数据的产品链条和问题"></a>大数据的产品链条和问题</h4><p><img src="/2018/05/07/如何成为数据科学家live-记录/4.jpg" alt="大数据的产品链条和问题"></p><p>收集 -&gt; 加工 -&gt; 变现 -&gt; 交易</p><p>收集：不同行业不同的收集方式，传感器自动收集</p><p>加工：用户画像，将原始数据转化成业务所需要的数据</p><p>变现：已有成熟的互联网解决方案，流量和数据变现</p><h4 id="数据科学家-Data-Scientists"><a href="#数据科学家-Data-Scientists" class="headerlink" title="数据科学家 Data Scientists"></a>数据科学家 Data Scientists</h4><p>硅谷里把博士毕业后从事数据行业的人统称，并不特指科学家</p><p><img src="/2018/05/07/如何成为数据科学家live-记录/5.jpg" alt="数据科学家"></p><p>并不强调洞察，而是计算，驱动机器计算自动化做决策</p><p><img src="/2018/05/07/如何成为数据科学家live-记录/6.jpg" alt="数据科学家技能"></p><p>必备素质：</p><p>1、 机器学习，统计学技能是基础</p><p>2、 领域知识</p><p>3、 分布式计算</p><p>核心能力：</p><p>1、 统计学基本准则</p><p>2、 机器学习建模能力</p><p>3、 模型最优化</p><p>4、 大数据工具、编程能力</p><p>5、 领域知识学习能力</p><p><img src="/2018/05/07/如何成为数据科学家live-记录/7.jpg" alt="数据科学家养成途径"></p><h6 id="意识：数据优先于经验、计算优先于人工"><a href="#意识：数据优先于经验、计算优先于人工" class="headerlink" title="意识：数据优先于经验、计算优先于人工"></a>意识：数据优先于经验、计算优先于人工</h6><p>能力：熟悉一项应用的全流程，其他的应用就有了一套可以借鉴的问题解决模板；定义问题目标的能力，将现实的问题转化为一套可以通过处理数据来解决的问题</p><p>技能：基础能力</p><h4 id="从零开始"><a href="#从零开始" class="headerlink" title="从零开始"></a>从零开始</h4><p><img src="/2018/05/07/如何成为数据科学家live-记录/8.jpg" alt="从零开始"></p><p>除了数据科学家，还有数据工程师、数据分析师、产品经理、运营等</p><p>数据分析师：与数据科学家对比来说，更依赖于数据洞察</p><h4 id="典型应用"><a href="#典型应用" class="headerlink" title="典型应用"></a>典型应用</h4><p><img src="/2018/05/07/如何成为数据科学家live-记录/9.jpg" alt="从零开始"></p><p>日志数据：用户操作相关数据，用户点击、访问</p><p>内容数据：用户访问的内容，音频、文本、视频内容</p><p>不同应用侧重的数据不同</p><h4 id="推荐图书"><a href="#推荐图书" class="headerlink" title="推荐图书"></a>推荐图书</h4><p><img src="/2018/05/07/如何成为数据科学家live-记录/10.jpg" alt="从零开始"></p><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在这个知乎live里听到了一个之前听到过的名词“计算广告”，在我离职前的一次公司分享会上，南京地区大boss张总就对这个概念侃侃而谈，还推荐了这本同名书籍。&lt;/p&gt;
&lt;p&gt;而我们组之后做的用户行为数据记录应该也是为了流量变现做准备，我最后的印象是已经接入了google的数据统计接口，就是不知道最后做的怎么样了。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>算法题 Edit Distance</title>
    <link href="http://louzx.me/2018/05/06/Edit-Distance/"/>
    <id>http://louzx.me/2018/05/06/Edit-Distance/</id>
    <published>2018-05-06T06:35:52.000Z</published>
    <updated>2018-05-07T03:30:40.212Z</updated>
    
    <content type="html"><![CDATA[<p>之前阿里菜鸟的在线编程题，当时只是有个一个思路但是没有实现出来，今天在lintcode上又看到了，那就记录一下吧。</p><p>题目如下：</p><p>给定两个字符串word1和word2,求出由一个变化到另外一个所需的最小步数，所允许的操作有：</p><ul><li>插入一个字符</li><li>删除一个字符</li><li>替换一个字符</li></ul><a id="more"></a><p><a href="https://www.lintcode.com/problem/edit-distance/description" target="_blank" rel="noopener">lintcode链接</a></p><p>解题思路：</p><p>动态规划</p><p>（说实话，动态规划我并不是很熟悉，我对它的印象类似于递归。经常在这种看上去比较麻烦的编程题用到动态规划的思想，没办法，好好学吧。）</p><p>动态规划三要素：转移方程，边界条件，最优子结构</p><p>用dp[i][j]表示word1[0,i-1]转化到word2[0,j-1]的步骤，转移方程有两种情况：</p><ul><li>word1[i] == word2[j],则dp[i][j] = dp[i-1][j-1]</li><li>word1[i] != word2[j],则分以上三种情况考虑：<ul><li>插入，dp[i][j] = dp[i-1][j] + 1</li><li>删除，dp[i][j] = dp[i][j-1] + 1</li><li>替换，dp[i][j] = dp[i-1][j-1] + 1</li></ul></li></ul><p>python代码如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">editDistince</span><span class="params">(self, word1, word2)</span>:</span></span><br><span class="line">        m = len(word1)</span><br><span class="line">        n = len(word2)</span><br><span class="line">        <span class="comment"># (m+1)*(n+1)二维矩阵，根据定义dp[m+1][n+1]为初始状态，即word1的全部长度转化成word2的全部长度</span></span><br><span class="line">        dp = [[<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(n+<span class="number">1</span>)] <span class="keyword">for</span> j <span class="keyword">in</span> range(m+<span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 此处即为边界条件，将一个空Stirng（长度为0）转化成另一个长度为i的String所需要的步数自然为i（即i次插入操作）</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n+<span class="number">1</span>):</span><br><span class="line">          dp[<span class="number">0</span>][i] = i</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(m+<span class="number">1</span>):</span><br><span class="line">          dp[j][<span class="number">0</span>] = j</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, m+<span class="number">1</span>):</span><br><span class="line">          <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> word1[i<span class="number">-1</span>] == word2[j<span class="number">-1</span>]:</span><br><span class="line">              dp[i][j] = dp[i<span class="number">-1</span>][j<span class="number">-1</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">              dp[i][j] = min(</span><br><span class="line">              dp[i<span class="number">-1</span>][j] + <span class="number">1</span></span><br><span class="line">              , dp[i][j<span class="number">-1</span>] + <span class="number">1</span></span><br><span class="line">              , dp[i<span class="number">-1</span>][j<span class="number">-1</span>] +<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> dp[m][n]</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;之前阿里菜鸟的在线编程题，当时只是有个一个思路但是没有实现出来，今天在lintcode上又看到了，那就记录一下吧。&lt;/p&gt;
&lt;p&gt;题目如下：&lt;/p&gt;
&lt;p&gt;给定两个字符串word1和word2,求出由一个变化到另外一个所需的最小步数，所允许的操作有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;插入一个字符&lt;/li&gt;
&lt;li&gt;删除一个字符&lt;/li&gt;
&lt;li&gt;替换一个字符&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>记录本blog搭建历程 --- hexo配合github pages搭建</title>
    <link href="http://louzx.me/2018/05/03/hello-blog/"/>
    <id>http://louzx.me/2018/05/03/hello-blog/</id>
    <published>2018-05-03T02:22:00.000Z</published>
    <updated>2018-05-03T08:56:12.773Z</updated>
    
    <content type="html"><![CDATA[<p>一直都希望能够搭建一个属于自己的blog，来满足自己<del>装逼</del>记录学习经历的需求。</p><p>但是一直由于<del>各种原因</del>(懒)，一直拖了下来，最近终于懒癌缓解，把这个blog搭了起来，那就赶紧记录下搭建过程，以及其中踩到的坑，算是对这一通折腾的证明。</p><a id="more"></a><h3 id="确定思路"><a href="#确定思路" class="headerlink" title="确定思路"></a>确定思路</h3><p>其实搭建博客由很多种实现方法，据我所查资料发现的blog实现方式就有几种：</p><ul><li>直接使用现有平台，包括但不限于CSDN、稀土掘金等</li><li>使用独立域名+VPS+blog系统，搭建个人独立blog</li></ul><p>本着折腾的精神自然要选择第二种看上去就很费劲的思路了，好处是可定制的程度很高，真正是属于码农的自留地。</p><h3 id="使用hexo生成blog框架"><a href="#使用hexo生成blog框架" class="headerlink" title="使用hexo生成blog框架"></a>使用hexo生成blog框架</h3><p>首先说明下其实hexo是属于上面所说的blog系统的一种，它是基于javaScript的，其他的基于python的Django应该也有类似的blog系统。</p><p>选择好了方向自然需要装环境，</p><ul><li><p>node.js</p><blockquote><p><a href="http://nodejs.cn/download/" target="_blank" rel="noopener">http://nodejs.cn/download/</a></p></blockquote><p>注意下版本，我一开始装的是4.几的版本，之后的过程中报了个各种兼容性问题，从新安装8.11.1稳定版本就一切OK了</p></li></ul><p>node.js正确安装之后会自动添加到环境变量PATH路径中，所以可以直接使用，接下来就是安装hexo了。</p><p>打开命令行窗口，推荐使用git bash,据其他教程说使用Windows cmd会出现“意想不到”的问题。</p><ul><li><p>安装hexo</p><blockquote><p><code>npm install -g hexo</code></p></blockquote><p>  npm是node的包管理工具类似于python的pip，估计全称就是node package manage，由于众所周知的墙的存在npm有时候会很慢，可以尝试国内镜像cnpm。</p></li><li><p>安装依赖包</p><blockquote><p><code>npm install</code></p></blockquote></li><li><p>在想要放blog的文件夹下</p><blockquote><p><code>hexo init</code></p></blockquote></li><li><p>hexo生成gengerate</p><blockquote><p><code>hexo g</code></p></blockquote></li><li><p>hexo打开本地服务器server,本地调试用 localhost:4000</p><blockquote><p><code>hexo s</code></p></blockquote></li><li><p>hexo部署deploy</p><blockquote><p><code>hexo d</code></p></blockquote><p>  部署到GitHub pages上还需要一个扩展</p><blockquote><p><code>npm install hexo-deployer-git --save</code></p></blockquote></li></ul><h3 id="把blog放到github上"><a href="#把blog放到github上" class="headerlink" title="把blog放到github上"></a>把blog放到github上</h3><h3 id="关联独立域名到github主页"><a href="#关联独立域名到github主页" class="headerlink" title="关联独立域名到github主页"></a>关联独立域名到github主页</h3><p>参考链接：</p><p><a href="https://www.jianshu.com/p/05289a4bc8b2" target="_blank" rel="noopener">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></p><p><a href="https://segmentfault.com/a/1190000004947261" target="_blank" rel="noopener">手把手教你使用Hexo + Github Pages搭建个人独立博客 </a></p><p><a href="https://www.zhihu.com/question/31377141" target="_blank" rel="noopener">github怎么绑定自己的域名？</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直都希望能够搭建一个属于自己的blog，来满足自己&lt;del&gt;装逼&lt;/del&gt;记录学习经历的需求。&lt;/p&gt;
&lt;p&gt;但是一直由于&lt;del&gt;各种原因&lt;/del&gt;(懒)，一直拖了下来，最近终于懒癌缓解，把这个blog搭了起来，那就赶紧记录下搭建过程，以及其中踩到的坑，算是对这一通折腾的证明。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>blog init</title>
    <link href="http://louzx.me/2018/04/28/My-New-Post/"/>
    <id>http://louzx.me/2018/04/28/My-New-Post/</id>
    <published>2018-04-28T08:20:00.000Z</published>
    <updated>2018-05-05T08:45:07.173Z</updated>
    
    <content type="html"><![CDATA[<p>我也要开始写博客了！！！</p><a id="more"></a><p>试一下各种技巧</p><ul><li><p>插入音乐</p>  <object width="340" height="86" data="http://music.163.com/style/swf/widget.swf?sid=514761281&type=2&auto=0&width=320&height=66" type="application/x-shockwave-flash"></object></li><li><p>插入图片</p><p>  <img src="/2018/04/28/My-New-Post/title.jpg" alt="pic"></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我也要开始写博客了！！！&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
